name: Dependency Management

on:
  schedule:
    - cron: '0 0 * * 1' # Toda segunda-feira Ã s 00:00
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for outdated dependencies
      run: npm run deps:check
    
    - name: Audit dependencies
      run: npm run deps:audit
    
    - name: Create issue if outdated
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const { execSync } = require('child_process');
          try {
            const outdated = execSync('npm outdated --json', { encoding: 'utf8' });
            const data = JSON.parse(outdated || '{}');
            
            if (Object.keys(data).length > 0) {
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open'
              });
              
              const hasExistingIssue = issues.data.some(issue => 
                issue.title.includes('Dependencies Update Required')
              );
              
              if (!hasExistingIssue) {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: 'ðŸš€ Dependencies Update Required',
                  body: `The following dependencies need updating:\n\n\`\`\`json\n${JSON.stringify(data, null, 2)}\n\`\`\``,
                  labels: ['dependencies', 'automation']
                });
              }
            }
          } catch (error) {
            console.log('No outdated dependencies');
          }
